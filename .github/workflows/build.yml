name: Build and release
on: push

env:
  CARGO_TERM_COLOR: always
  FORCE_COLOR: true

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            binsuffix: linux
            file: target/release/bepinex-installer
            args: --best --lzma
            strip: true
          - os: windows-latest
            binsuffix: windows
            file: target/release/bepinex-installer.exe
            args: --best --lzma
            strip: true
          - os: macos-latest
            binsuffix: macos
            file: target/release/bepinex-installer
            args: --best --lzma
            strip: true

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust toolchain
        id: install_rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt, clippy

      - name: Install Linux specific packages
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install build-essential clang-format libgtk-3-dev

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: |
            v2-${{ github.workflow }}-${{ runner.os }}-rust-${{ steps.install_rust.outputs.rustc_hash }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            v2-${{ github.workflow }}-${{ runner.os }}-rust-${{ steps.install_rust.outputs.rustc_hash }}-
            v2-${{ github.workflow }}-${{ runner.os }}-rust-

      # - name: cargo check
      #   run: cargo check --verbose --workspace --all-targets

      - name: cargo build
        run: cargo build --verbose --release

      # - name: cargo test
      #   run: cargo test --verbose --workspace
      #
      # - name: cargo fmt
      #   run: cargo fmt --verbose --all -- --check
      #
      # - name: cargo clippy
      #   run: cargo clippy --verbose --workspace

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: bepinex-installer-${{ matrix.binsuffix }}
          path: ${{ matrix.file }}

  release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v2
        with:
          name: bepinex-installer-linux
          path: linux

      - uses: actions/download-artifact@v2
        with:
          name: bepinex-installer-macos
          path: macos

      - uses: actions/download-artifact@v2
        with:
          name: bepinex-installer-windows
          path: windows

      - name: Get some values needed for the release
        id: release_values
        run: |
          echo "::set-output name=date::$(date '+%Y-%m-%d')"
          echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"

      - name: Rename files
        run: |
          mv linux/bepinex-installer linux/bepinex-installer.Linux
          mv macos/bepinex-installer macos/bepinex-installer.MacOS

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: Dev Release
          tag_name: dev
          files: |
            linux/bepinex-installer.Linux
            macos/bepinex-installer.MacOS
            windows/bepinex-installer.exe
